version: 2.1
executors:
  node:
    docker:
      - image: circleci/node:13.8.0
  python:
    docker:
      - image: python:3.11-rc-alpine
orbs:
  aws-eks: circleci/aws-eks@2.2.0
  kubernetes: circleci/kubernetes@1.3
jobs:
  check-dockerfile:
    docker:
      - image: python:3.7.3-stretch
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: install hadolint
          command: |
            python3 -m venv venv
            . venv/bin/activate
            # make install
            # Install hadolint
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
            chmod +x /bin/hadolint
      - run:
          name: run lint to check Dockerfile
          command: |
            . venv/bin/activate
            make lint
  build-image:
    docker:
      - image: docker:20.10.7-git
    working_directory: ~/devops-uda-05
    steps:
      - setup_remote_docker:
          version: 20.10.7
      - checkout
      - run:
          name: login docker
          command: |
            echo $PASSWORD_DOCKER | docker login -u nganpv --password-stdin
      - run:
          name: build image
          command: |
            # chmod +x run_docker.sh
            # ./run_docker.sh
            docker build -t udacity-devops-project5 .
            docker tag udacity-devops-project5 nganpv/udacity-devops-project5:latest
      - run:
          name: push image to docker hub
          command: |
            # chmod +x upload_docker.sh
            # ./upload_docker.sh\
            docker push nganpv/udacity-devops-project5:latest
  create-cluster:
    executor: node
    working_directory: ~/devops-uda-05
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["f2:b9:65:2e:0e:a9:0d:e7:be:a7:0a:bf:41:da:59:de"]
      - run:
          name: install dependencies and cliv2
          command: |
            sudo apt-get update && sudo apt-get install -yy less
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
      - run:
          name: install eksctl
          command: |
            # Refer here: https://github.com/weaveworks/eksctl
            # for ARM systems, set ARCH to: `arm64`, `armv6` or `armv7`
            ARCH=amd64
            PLATFORM=$(uname -s)_$ARCH
            curl -sLO "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$PLATFORM.tar.gz"
            # (Optional) Verify checksum
            curl -sL "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_checksums.txt" | grep $PLATFORM | sha256sum --check
            tar -xzf eksctl_$PLATFORM.tar.gz -C /tmp && rm eksctl_$PLATFORM.tar.gz
            sudo mv /tmp/eksctl /usr/local/bin
      - run:
          name: install kubectl
          command: |
            curl -O https://s3.us-west-2.amazonaws.com/amazon-eks/1.26.2/2023-03-17/bin/linux/amd64/kubectl
            curl -O https://s3.us-west-2.amazonaws.com/amazon-eks/1.26.2/2023-03-17/bin/linux/amd64/kubectl.sha256
            sha256sum -c kubectl.sha256
            openssl sha1 -sha256 kubectl
            chmod +x ./kubectl
            mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$PATH:$HOME/bin
            echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc
            kubectl version --short --client

      - run:
          name: create AWS profile
          command: |
            aws configure set aws_access_key_id "$AWS_ACCESS_KEY" --profile nganpv && aws configure set aws_secret_access_key "$AWS_SECRET_ACCESS_KEY" --profile nganpv && aws configure set region "$AWS_DEFAULT_REGION" --profile nganpv
      - run:
          name: delete exist cluster
          command: |
            chmod +x delete_exist_cluster.sh
            ./delete_exist_cluster.sh
      # - run:
      #     name: wait for 300 seconds to delete cluster
      #     command: sleep 300
      # - run:
      #     name: create cluster
      #     command: |
      #       chmod +x run_kubernetes.sh
      #       ./run_kubernetes.sh
      # - run:
      #     name: deployment app
      #     command: |
      #       aws eks update-kubeconfig --region us-east-1 --name udacity-project5 --profile nganpv
      #       kubectl apply -f deployment.yml
      # - run:
      #     name: attach to elb
      #     command: |
      #       kubectl apply -f services.yml
      # - run:
      #     name: get pods and node
      #     command: |
      #       kubectl get pods --output=wide
      #       kubectl get nodes --output=wide
      # - run:
      #     name: get elb url
      #     command: |
      #       kubectl get services elb

workflows:
  default:
    jobs:
      # - check-dockerfile
      # - build-image:
      #     requires:
      #       - check-dockerfile
      - create-cluster
          # requires:
            # - build-image
